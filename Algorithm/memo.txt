<input.txt>output.txt
#define _CRT_SECURE_NO_WARNINGS

랭킹 15 위  snrnsidy
랭킹 30 위  baactree



랭킹 28위 카톡방  YunGoon



//백터 자료형
//	for (vector<int>::size_type i = 0; i < a[x].size(); i++)
//	{
//		int y = a[x][i];
//		dfs(y);
//	}

// #define endl '\n'

/*
int arr[10]; 이렇게 있으면
begin(end) == &arr[0]  -> 포인터
front(back) == arr[0]   -> 값
이런 느낌이다.

큐의 조회는 맨앞과 맨뒤 요소 말고는 안됨.

*/

/*
sort(vec.begin(), vec.end()); // 오름차순

내림차순정렬은 #include <functional> 추가하고
sort(vec.begin(), vec.end(), greater<int>()); 이렇게 쓴다
https://blankspace-dev.tistory.com/160?category=647810
*/



/*
string 변수 입출력

/*
char buf[100]; 
scanf("%s", buf); 
string str = buf;

printf("%s", buf.c_str());
*/

*/



/*
//https://qastack.kr/programming/7571326/why-does-dividing-two-int-not-yield-the-right-value-when-assigned-to-double
동일한 유형 (정수, 이중 등)의 두 숫자를 나눌 때 결과는 항상 동일한 유형이됩니다 (따라서 'int / int'는 항상 int가됩니다).

이 경우 분수 데이터가 이미 손실 된 경우 계산 후double var = integer result 정수 결과를 double로 캐스팅합니다 . (대부분의 언어는 예외 나 오류를 발생시키지 않고 유형 부정확성을 방지하기 위해이 캐스팅을 수행합니다.)

결과를 두 배로 유지하려면 다음과 같은 상황을 만들고 싶을 것입니다. double var = double result

이를 수행하는 가장 쉬운 방법은 방정식의 오른쪽에있는 표현식을 강제로 이중으로 변환하는 것입니다.

c = a/(double)b

정수와 double을 나누면 정수가 double로 캐스트됩니다 (수학을 수행 할 때 컴파일러는 종종 데이터 손실을 방지하기 위해 가장 특정한 데이터 유형으로 "업 캐스트"됩니다).

업 캐스트 후에는 a더블로 마무리되고 이제 두 더블 사이의 분할이 있습니다. 그러면 원하는 부서와 할당이 생성됩니다.

다시 말하지만, 이것은 언어에 따라 다르지만 (컴파일러에 한정 될 수도 있음) 거의 모든 언어 (확실히 내가 생각할 수있는 모든 언어)가이 예제를 동일하게 취급합니다.

*/





max_element(), min_element() 사용법
//https://m.blog.naver.com/PostView.nhn?blogId=kks227&logNo=220246803499&proxyReferer=https:%2F%2Fwww.google.co.kr%2F